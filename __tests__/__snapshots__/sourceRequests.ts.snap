// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compatibility routes GET /publications/requests/open should return pending source requests 1`] = `
Array [
  Object {
    "approved": null,
    "closed": false,
    "pubId": null,
    "pubImage": null,
    "pubName": null,
    "pubRss": null,
    "pubTwitter": null,
    "url": "http://1.com",
    "userEmail": null,
    "userId": "1",
    "userName": null,
  },
  Object {
    "approved": true,
    "closed": false,
    "pubId": "a",
    "pubImage": "http://a.com",
    "pubName": "A",
    "pubRss": "http://a.com/feed",
    "pubTwitter": "a",
    "url": "http://3.com",
    "userEmail": null,
    "userId": "2",
    "userName": null,
  },
]
`;

exports[`compatibility routes POST /publications/requests/:id/approve should approve a source request 1`] = `
SourceRequest {
  "approved": true,
  "closed": false,
  "reason": null,
}
`;

exports[`compatibility routes POST /publications/requests/:id/decline should decline a source request 1`] = `
SourceRequest {
  "approved": false,
  "closed": true,
  "reason": "not-active",
}
`;

exports[`compatibility routes POST /publications/requests/:id/publish should publish a source request 1`] = `
SourceRequest {
  "approved": true,
  "closed": true,
}
`;

exports[`compatibility routes PUT /publications/requests/:id should update an existing source request 1`] = `
SourceRequest {
  "sourceImage": "http://image.com",
  "sourceName": "A",
  "sourceTwitter": "a",
  "sourceUrl": "http://source.com",
}
`;

exports[`mutation approveSourceRequest should approve a source request 1`] = `
Object {
  "approveSourceRequest": Object {
    "approved": true,
    "closed": false,
    "reason": null,
  },
}
`;

exports[`mutation declineSourceRequest should decline a source request 1`] = `
Object {
  "declineSourceRequest": Object {
    "approved": false,
    "closed": true,
    "reason": "not-active",
  },
}
`;

exports[`mutation publishSourceRequest should publish a source request 1`] = `
Object {
  "publishSourceRequest": Object {
    "approved": true,
    "closed": true,
  },
}
`;

exports[`mutation publishSourceRequest should publish a source request 2`] = `
MachineSource {
  "active": true,
  "color": null,
  "description": null,
  "flags": Object {},
  "handle": "a",
  "headerImage": null,
  "id": "a",
  "image": "http://a.com",
  "name": "A",
  "private": false,
  "rankBoost": 0,
  "twitter": "a",
  "type": "machine",
  "website": "http://3.com",
}
`;

exports[`mutation publishSourceRequest should publish a source request 3`] = `
Array [
  SourceFeed {
    "feed": "http://a.com/feed",
    "lastFetched": null,
    "sourceId": "a",
  },
]
`;

exports[`mutation requestSource should add new source request 1`] = `
Object {
  "requestSource": Object {
    "sourceUrl": "http://source.com",
    "userEmail": "ido@daily.dev",
    "userId": "1",
    "userName": "Ido",
  },
}
`;

exports[`mutation requestSource should return bad request when url is not valid 1`] = `
Array [
  Object {
    "extensions": Object {
      "code": "GRAPHQL_VALIDATION_FAILED",
    },
    "locations": Array [
      Object {
        "column": 26,
        "line": 2,
      },
    ],
    "message": "Variable \\"$data\\" got invalid value \\"invalid\\" at \\"data.sourceUrl\\"; Expected type \\"URL\\". Field validation failed",
  },
]
`;

exports[`mutation updateSourceRequest should partially update existing request 1`] = `
Object {
  "updateSourceRequest": Object {
    "sourceFeed": "http://a.com/feed",
    "sourceId": "a",
    "sourceImage": "http://image.com",
    "sourceName": "A",
    "sourceTwitter": "a",
    "sourceUrl": "http://source.com",
  },
}
`;

exports[`mutation uploadSourceRequestLogo should upload new logo for source request 1`] = `
Object {
  "uploadSourceRequestLogo": Object {
    "sourceImage": "http://image.com",
  },
}
`;

exports[`query pendingSourceRequests should return pending source requests 1`] = `
Object {
  "pendingSourceRequests": Object {
    "edges": Array [
      Object {
        "node": Object {
          "sourceUrl": "http://1.com",
        },
      },
      Object {
        "node": Object {
          "sourceUrl": "http://3.com",
        },
      },
    ],
    "pageInfo": Object {
      "endCursor": "YXJyYXljb25uZWN0aW9uOjE=",
      "hasNextPage": false,
    },
  },
}
`;
