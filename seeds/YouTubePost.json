[
  {
    "metadataChangedAt": "2023-12-14T13:44:09.019",
    "canonicalUrl": "https://www.youtube.com/watch?v=lw_dUKXNCyw",
    "score": 28375339,
    "url": "https://www.youtube.com/watch?v=lw_dUKXNCyw",
    "videoId": "lw_dUKXNCyw",
    "createdAt": "2023-12-14T02:19:07.201",
    "image": "https://i.ytimg.com/vi/lw_dUKXNCyw/sddefault.jpg",
    "shortId": "jbwfrepOK",
    "id": "jbwfrepOK",
    "sourceId": "community",
    "summary": "Learning how to learn is the highest leverage skill for engineers. Beginners should stick with battle-tested technology. Developers should embrace criticism and use it as an opportunity for improvement.",
    "tsv": "'5':1 'code':10 'knew':6 'start':9 'thing':2 'wish':4",
    "sentAnalyticsReport": true,
    "title": "5 Things I Wish I Knew When I Started Coding",
    "type": "video:youtube",
    "readTime": 8,
    "tagsStr": null,
    "description": "Check out Notion AI today: https://ntn.so/johnfish #ad \n\nChapters:\n0:00 Introduction\n0:10 Learn How to Learn\n1:30 Notion #ad \n2:30 Use Battle-Tested Tech\n4:05 Perfection is the Enemy of Progress\n5:26 Don't be Defensive\n7:00 Have Fun With It",
    "yggdrasilId": "a84cbfeb-035d-5932-b72e-78175c7f851f",
    "publishedAt": "2023-12-11T20:00:30"
  },
  {
    "metadataChangedAt": "2023-12-13T17:23:49.49",
    "canonicalUrl": "https://www.youtube.com/watch?v=MV034VqHv5Q",
    "score": 28354962,
    "url": "https://www.youtube.com/watch?v=MV034VqHv5Q",
    "videoId": "MV034VqHv5Q",
    "createdAt": "2023-11-29T22:42:23.54",
    "image": "https://i.ytimg.com/vi/MV034VqHv5Q/sddefault.jpg",
    "shortId": "cg7dj7a0O",
    "id": "cg7dj7a0O",
    "sourceId": "community",
    "summary": "The article discusses the importance of network performance in web development and the challenges faced with resource loading. It highlights the need for proper prioritization and server-side implementation based on browser signals. The author also emphasizes the importance of improved tooling and debugging techniques to identify and fix performance issues.",
    "tsv": "'2023':10 'cut':5 'edg':6 'load':2 'marx':8 'performancenow':9 'resourc':1 'robin':7",
    "sentAnalyticsReport": true,
    "title": "Resource Loading at the Cutting Edge | Robin Marx | performance.now() 2023",
    "type": "video:youtube",
    "readTime": null,
    "tagsStr": null,
    "description": "When it comes to loading page resources, Web Developers are truly spoiled these days, with a plethora of mechanisms and protocol features to choose from. From resource hints to fetchpriority, via 103 Early Hints over prerender/prefetch, and from async/defer/module to fetch(), ... the list goes on and on (oh, and did I mention HTTP/3?). However, many of these options are often misunderstood, both in how they should function and how they actually function in the various main browsers.\n\nIn this deep-dive session, Robin starts from real-world examples to show how things like prioritization are supposed to work, how especially Chrome has some pretty advanced loading heuristics, how even the excellent WebPageTest can sometimes be misleading, and how to get started debugging this yourself with things like netlog and (*gasp*) wireshark.\n\nYou will walk away with a deeper understanding of what happens under the hood, which will allow you to better deal with the various gotchas and quirks present in today's browsers and resource loading features.\n\nSlides: https://perfnow.nl/_downloads/2023/ResourceLoading_RobinMarx_PerfNow2023.pdf\nAbout Robin: https://www.linkedin.com/in/rmarx/\n\nMore about performance.now(); https://perfnow.nl\nReceive conference announcements in your inbox: https://perfnow.nl/subscribe",
    "yggdrasilId": "02e34c5b-ed3e-5208-8759-1380c4d5338c",
    "publishedAt": null
  },
  {
    "metadataChangedAt": "2023-12-13T17:27:57.728",
    "canonicalUrl": "https://www.youtube.com/watch?v=fkIvmfqX-t0",
    "score": 28364652,
    "url": "https://www.youtube.com/watch?v=fkIvmfqX-t0",
    "videoId": "fkIvmfqX-t0",
    "createdAt": "2023-12-06T16:12:19.557",
    "image": "https://i.ytimg.com/vi/fkIvmfqX-t0/sddefault.jpg",
    "shortId": "KrV5Se3Ni",
    "id": "KrV5Se3Ni",
    "sourceId": "community",
    "summary": "Algorithms are step-by-step instructions for solving problems. They are everywhere in the physical and virtual world and represent an opportunity to solve problems. Computers have central processing units (CPUs) and memory, and algorithms are used to program them. Algorithms can be used to sort data, make recommendations on social media platforms, and improve everyday life. There is a distinction between AI with and without algorithms, with AI using algorithms to learn and improve.",
    "tsv": "'5':6 'algorithm':4 'difficulti':9 'explain':3 'harvard':1 'level':7 'professor':2 'wire':10",
    "sentAnalyticsReport": true,
    "title": "Harvard Professor Explains Algorithms in 5 Levels of Difficulty | WIRED",
    "type": "video:youtube",
    "readTime": null,
    "tagsStr": null,
    "description": "From the physical world to the virtual world, algorithms are seemingly everywhere. David J. Malan, Professor of Computer Science at Harvard University, has been challenged to explain the science of algorithms to 5 different people; a child, a teen, a college student, a grad student, and an expert.\r\n\r\nCorrection: Our Level 2 teen, Lexi Kemmer, is actually 17-years-old.\r\n\r\nDirector: Wendi Jonassen\r\nDirector of Photography: Zach Eisen\r\nEditor: Louville Moore\r\nHost: David J. Malan\r\nGuests: \r\nLevel 1: Addison Vincent\r\nLevel 2: Lexi Kemmer\r\nLevel 3: Patricia Guirao\r\nLevel 4: Mahi Shafiullah\r\nLevel 5: Chris Wiggins\r\nCreative Producer: Maya Dangerfield\r\nLine Producer: Joseph Buscemi\r\nAssociate Producer: Paul Gulyas; Kameryn Hamilton\r\nProduction Manager: D. Eric Martinez\r\nProduction Coordinator: Fernando Davila\r\nCasting Producer: Vanessas Brown; Nicholas Sawyer\r\nCamera Operator: Brittany Berger\r\nGaffer: Gautam Kadian\r\nSound Mixer: Lily Van Leeuwen\r\nProduction Assistant: Ryan Coppola\r\nHair & Make-Up: Yev Wright-Mason\r\nPost Production Supervisor: Alexa Deutsch\r\nPost Production Coordinator: Ian Bryant\r\nSupervising Editor: Doug Larsen\r\nAssistant Editor: Lauren Worona\n\nStill haven’t subscribed to WIRED on YouTube? ►► http://wrd.cm/15fP7B7 \r\nListen to the Get WIRED podcast  ►► https://link.chtbl.com/wired-ytc-desc\r\nWant more WIRED? Get the magazine ►► https://subscribe.wired.com/subscribe/splits/wired/WIR_YouTube?source=EDT_WIR_YouTube_0_Video_Description_ZZ\r\n\r\nFollow WIRED:\r\nInstagram ►►https://instagram.com/wired\r\nTwitter ►►http://www.twitter.com/wired\r\nFacebook ►►https://www.facebook.com/wired\r\nTik Tok  ►►https://www.tiktok.com/@wired\r\n\r\nGet more incredible stories on science and tech with our daily newsletter: https://wrd.cm/DailyYT\r\n\r\nAlso, check out the free WIRED channel on Roku, Apple TV, Amazon Fire TV, and Android TV. \r\n\r\nABOUT WIRED\r\nWIRED is where tomorrow is realized. Through thought-provoking stories and videos, WIRED explores the future of business, innovation, and culture.",
    "yggdrasilId": "84318b81-944c-5ac9-bbf1-59f71e994d38",
    "publishedAt": null
  },
  {
    "metadataChangedAt": "2023-12-13T17:20:11.614",
    "canonicalUrl": "https://www.youtube.com/watch?v=WZq9drZRo58",
    "score": 28371309,
    "url": "https://www.youtube.com/watch?v=WZq9drZRo58",
    "videoId": "WZq9drZRo58",
    "createdAt": "2023-12-11T07:09:53.771",
    "image": "https://i.ytimg.com/vi/WZq9drZRo58/sddefault.jpg",
    "shortId": "qq2xQXbch",
    "id": "qq2xQXbch",
    "sourceId": "community",
    "summary": "Haskell is a purely functional programming language known for its elegance, expressiveness, and power. It offers a strong type system, promotes functional programming, and allows for more efficient programming. To get started with Haskell, you need to set up an environment, write a simple Hello Haskell program, and compile and run it.",
    "tsv": "'beginn':4 'cours':7 'crash':6 'haskel':1 'program':2",
    "sentAnalyticsReport": true,
    "title": "Haskell Programming: A Beginner's Crash Course",
    "type": "video:youtube",
    "readTime": null,
    "tagsStr": null,
    "description": "Haskell Programming: A Beginner's Crash Course\n\nOUTLINE: \n\n00:00:00 Introduction to Haskell\n00:01:07 Setting up the Environment\n00:01:22 Writing Your First Haskell Program\n00:01:55 Running Your Haskell Program\n00:02:12 Conclusion",
    "yggdrasilId": "9165ef40-0cce-5f88-8a8a-db1ba58f1693",
    "publishedAt": null
  },
  {
    "metadataChangedAt": "2023-12-13T17:29:03.1",
    "canonicalUrl": "https://www.youtube.com/watch?v=h2BcitZPMn4&ab_channel=LeeRobinson",
    "score": 28361966,
    "url": "https://www.youtube.com/watch?v=h2BcitZPMn4&ab_channel=LeeRobinson",
    "videoId": "h2BcitZPMn4",
    "createdAt": "2023-12-04T19:26:52.525",
    "image": "https://i.ytimg.com/vi/h2BcitZPMn4/sddefault.jpg",
    "shortId": "gcN8p3YI3",
    "id": "gcN8p3YI3",
    "sourceId": "community",
    "summary": "This article provides an introduction to Next.js and React. It explains how to install Node.js, create a GitHub account, and deploy the code with Vercel. The tutorial covers topics such as JSX, composability, and fetching data from a Postgres database. It also demonstrates how to navigate between different routes, add inline styles using Tailwind CSS, and handle form submissions.",
    "tsv": "'introduct':1 'nextj':3 'react':5",
    "sentAnalyticsReport": true,
    "title": "Introduction to Next.js and React",
    "type": "video:youtube",
    "readTime": null,
    "tagsStr": null,
    "description": "A hands-on introduction to the main Next.js and React concepts by building and deploying a real application.\n\n0:00 – Introduction\n0:29 – Requirements\n2:24 – Package Managers\n4:45 – Running Locally\n6:33 – Fast Refresh\n6:57 – Routers\n7:57 – React\n8:44 – JSX\n10:14 – Components\n11:15 – Props\n12:25 – Composing\n14:08 – Imports and Exports\n15:36 – External Components\n17:05 – Create Next App\n19:09 – Directory Overview\n21:57 – Layouts and Pages\n26:36 – Routing\n27:43 – Dynamic Routes\n28:36 – next/link\n30:34 – Reading Route Parameters\n31:48 – Nested Layouts\n33:51 – Installing Postgres\n35:15 – Async Components (Data Fetching)\n40:53 – Suspense + Caching\n43:58 – Styling\n48:16 – Quiz Pages\n51:01 – Database Schema\n51:49 – Displaying Quiz Answers\n54:29 – Displaying Correct Answer (Server Action)\n1:01:44 – Creating New Quizzes (Forms) \n1:14:40 – Revalidating Data\n1:17:04 – Deploying to Vercel \n1:20:21 – Conclusion\n\nHere are some additional resources:\n\n- Next.js Courses: https://nextjs.org/learn\n- React Course: https://react.dev\n- Me: https://leerob.io",
    "yggdrasilId": "8f28b5cc-37fa-55fb-8e91-e2439179052d",
    "publishedAt": null
  },
  {
    "metadataChangedAt": "2023-12-13T17:35:07.053",
    "canonicalUrl": "https://www.youtube.com/watch?v=OFmHsFQmpMc&ab_channel=hiphops-io",
    "score": 28357161,
    "url": "https://www.youtube.com/watch?v=OFmHsFQmpMc&ab_channel=hiphops-io",
    "videoId": "OFmHsFQmpMc",
    "createdAt": "2023-12-01T11:21:32.315",
    "image": "https://i.ytimg.com/vi/OFmHsFQmpMc/sddefault.jpg",
    "shortId": "33NfEnIOe",
    "id": "33NfEnIOe",
    "sourceId": "community",
    "summary": "Create a Slack standup bot using Hiphops with automated reminders and notifications.",
    "tsv": "'bot':5 'creat':1 'hiphop':7 'slack':3 'standup':4",
    "sentAnalyticsReport": true,
    "title": "Creating a Slack standup bot with Hiphops",
    "type": "video:youtube",
    "readTime": null,
    "tagsStr": null,
    "description": "In this walkthrough I'm showing off our new schedule feature, using it to create an async style standup bot for Slack.\n\nThis flow will remind your team when it's time for standup, provide a quick and easy UI to enter their update, and post it back to Slack.",
    "yggdrasilId": "d107ba84-525e-529c-92a2-bd9962b8b689",
    "publishedAt": null
  },
  {
    "metadataChangedAt": "2023-12-13T18:33:21.75",
    "canonicalUrl": "https://www.youtube.com/watch?v=ANCm3oG7htM",
    "score": 28356022,
    "url": "https://www.youtube.com/watch?v=ANCm3oG7htM",
    "videoId": "ANCm3oG7htM",
    "createdAt": "2023-11-30T16:22:34.97",
    "image": "https://i.ytimg.com/vi/ANCm3oG7htM/sddefault.jpg",
    "shortId": "0w6IW77fT",
    "id": "0w6IW77fT",
    "sourceId": "community",
    "summary": "JavaScript underwent several changes in 2023, including new language features like object grouping, array sorting and reversing, and the introduction of new HTML elements like 'search' and 'dialogue'. Frameworks like Next.js, Vue.js, and Angular also saw updates, with Next.js introducing the app directory and server components, Vue.js adding dev tools, and Angular implementing a new template syntax and defer views. Additionally, backend JavaScript saw improvements with the release of Node.js versions 20 and 21 and the introduction of Bun, a promising new JavaScript runtime.",
    "tsv": "'10':1 '2023':7 'chang':3 'javascript':2 'miss':5",
    "sentAnalyticsReport": true,
    "title": "10 JavaScript changes you missed in 2023",
    "type": "video:youtube",
    "readTime": 5,
    "tagsStr": "javascript,angular,nextjs",
    "description": "How has JavaScript and web development changed in 2023? Learn about the top 10 updates to Next.js, React, Angular, Vue, and Node.js. \n\n#webdevelopment #programming #top10 \n\n💬 Chat with Me on Discord\n\nhttps://discord.gg/fireship\n\n🔗 Resources\n\nJS groupBy method https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy\nNext.js Criticism https://pilcrow.vercel.app/blog/nextjs-why?s\nHTMX in 100 Seconds https://youtu.be/r-GSGH2RxJs?si=jQR6TVNzaJ8dEobC\n\n🔥 Get More Content - Upgrade to PRO\n\nUpgrade at https://fireship.io/pro\nUse code YT25 for 25% off PRO access \n\n🎨 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n🔖 Topics Covered\n\n- JavaScript framework of the year award\n- New features in JS language\n- HTML dialog element\n- Next.js App Directory\n- What is UnJS?\n- Major changes to Angular 17\n- Bun JavaScript Runtime vs Node.js",
    "yggdrasilId": "599c74af-7f7e-5fae-9640-b4e14f91577d",
    "publishedAt": null
  },
  {
    "metadataChangedAt": "2023-12-13T17:27:37.873",
    "canonicalUrl": "https://www.youtube.com/watch?v=lI4GQdhROsE",
    "score": 28355541,
    "url": "https://www.youtube.com/watch?v=lI4GQdhROsE",
    "videoId": "lI4GQdhROsE",
    "createdAt": "2023-11-30T08:21:04.967",
    "image": "https://i.ytimg.com/vi/lI4GQdhROsE/sddefault.jpg",
    "shortId": "vyjqiOxGB",
    "id": "vyjqiOxGB",
    "sourceId": "community",
    "summary": "Learn about common mistakes in Vue and Nuxt, such as misusing the key directive, not using reactive dependencies correctly, and using non-standard methods for fetching data. Get tips on how to avoid these mistakes and improve your developer experience.",
    "tsv": "'2023':3 'avoid':15 'common':6 'daniel':4 'kelli':5 'mistak':7 'nation':2 'nuxt':1,11 'vue':9",
    "sentAnalyticsReport": true,
    "title": "Nuxt Nation 2023: Daniel Kelly - Common Mistakes in Vue and Nuxt and How to Avoid Them",
    "type": "video:youtube",
    "readTime": null,
    "tagsStr": null,
    "description": "He is the Lead Instructor and content creator at Vue School where he enjoys helping other developers reach their full potential. Over the years, he’s worked with technologies like Vue.js, Nuxt.js, Laravel, and more, to create projects ranging from simple websites to enterprise-level applications.\n\nBuilding apps with Nuxt is a delight, but there are some common gotchas you should look out for! In this talk, let’s take a look at some common mistakes that lead to bugs, wasted time, and frustration for Nuxt developers. Topics include: the v-for key attribute, defining reactive state, failing to clean up event listeners, useFetch the wrong way, and more! Many of the mistakes you’ve probably been guilty of yourself (I know I have!). \n\nLearn strategies for making the same mistake twice or learn from my own mistakes and the mistakes of others from the community.\n\nAttend largest online Vue.js Conference for free!\nhttps://vuejsnation.com/\n\nThe official certification of competence for the Vue.js Framework\nhttps://certification.vuejs.org/\n\nDo you want to master Nuxt 3?\n\nMastering Nuxt 3 Course\nhttps://masteringnuxt.com/nuxt3\n\nReady to master the Officially recommended State Management solution for Vue.js?\n\nMastering Pinia Course\nhttps://masteringpinia.com/\n\nContact us\nteam@vueschool.io",
    "yggdrasilId": "8eb1462c-a373-517a-b5bd-3e28ab08d04a",
    "publishedAt": null
  },
  {
    "metadataChangedAt": "2023-12-14T08:25:16.582",
    "canonicalUrl": "https://youtu.be/-vUzFbnutwE",
    "score": 28375705,
    "url": "https://youtu.be/-vUzFbnutwE",
    "videoId": "-vUzFbnutwE",
    "createdAt": "2023-12-14T08:25:18.32",
    "image": "https://i.ytimg.com/vi/-vUzFbnutwE/sddefault.jpg",
    "shortId": "kGA8UtNmA",
    "id": "kGA8UtNmA",
    "sourceId": "community",
    "summary": "Documento had to choose between creating a new application or using the existing code base when building a public API. They considered trpc open API and TS rest as technologies for building the API, and after comparing the two, they concluded that TS rest is a more robust solution.",
    "tsv": "'api':2 'public':1 'trpc':4",
    "sentAnalyticsReport": true,
    "title": "Public API with tRPC?",
    "type": "video:youtube",
    "readTime": 5,
    "tagsStr": "typescript,rest-api",
    "description": "This video talks about the difference between trpc-openapi and ts-rest for building public-facing APIs with tRPC.\n\nArticle link - https://catalins.tech/public-api-trpc/\n\nLinks\n🐦  Twitter - https://x.com/catalinmpit\n✉️  Newsletter - https://newsletter.catalins.tech/\n✍️  Blog - https://catalins.tech",
    "yggdrasilId": "1f350e84-b0ca-5416-bbc3-4f192ed4ec7e",
    "publishedAt": "2023-12-14T06:33:35"
  }
]
