kind: Module
type: container
name: api
dockerfile: "${var.dev ? 'Dockerfile.dev' : 'Dockerfile.multistage'}"
exclude:
  - debezium/**/*
tasks:
  - name: api-migrate
    args: "${var.dev ? [ 'npm', 'run', 'db:migrate:latest' ] : ['node', './node_modules/typeorm/cli.js', 'migration:run']}"
    env: &env
      PORT: 5000
      TYPEORM_HOST: postgres
      TYPEORM_DATABASE: ${var.api-database}
      TYPEORM_USER: ${var.postgres-username}
      TYPEORM_PASSWORD: ${var.postgres-password}
      REDIS_HOST: redis
      PUBSUB_EMULATOR_HOST: ${var.pubsub-host}
      PUBSUB_PROJECT_ID: ${var.gcloud-project}
      GCLOUD_PROJECT: ${var.gcloud-project}
      ENABLE_PRIVATE_ROUTES: true
      ENABLE_SUBSCRIPTIONS: true
      ENABLE_PUBSUB: true
      TZ: UTC
      ACCESS_SECRET: topsecret
      GATEWAY_URL: http://gateway
      GATEWAY_SECRET: topsecret
      DEFAULT_IMAGE_URL: https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/1,https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/2,https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/3,https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/4,https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/5,https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/6,https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/7,https://res.cloudinary.com/daily-now/image/upload/f_auto/v1/placeholders/8
      DEFAULT_IMAGE_RATIO: 1
      URL_PREFIX: "http://${var.api-hostname}"
      COMMENTS_PREFIX: "http://${var.api-hostname}"
      FLAGSMITH_KEY: secret
      REDIS_PORT: 6379
      COOKIES_KEY: topsecret
      JWT_SECRET: '|r+.2!!!.Qf_-|63*%.D'
      JWT_AUDIENCE: 'Daily Staging'
      JWT_ISSUER: 'Daily API Staging'
    dependencies:
      - postgres
  - name: api-pubsub-init
    args: "${var.dev ? [ 'npm', 'run', 'cloud:init' ] : ['node', './bin/initPubsub.js']}"
    env:
      <<: *env
    dependencies:
      - pubsub
  - name: api-seed
    args: "${var.dev ? [ 'npm', 'run', 'db:seed:import' ] : ['node', './bin/import.js']}"
    disabled: true
    env:
      <<: *env
    dependencies:
      - api-migrate
services:
  - name: api
    args: "${var.dev ? [ 'npm', 'run', 'dev' ] : ['npm', 'run', 'start']}"
    devMode: &devMode
      sync:
        - source: src
          target: /opt/app/src
          exclude: [ node_modules ]
          mode: one-way-replica
    dependencies:
      - redis
      - postgres
      - api-migrate
      - pubsub
      - api-debezium
    ports:
      - name: http
        containerPort: 5000
        servicePort: 80
    ingresses:
      - path: /graphql
        port: http
        hostname: ${var.api-hostname}
    healthCheck:
      httpGet:
        path: /health
        port: http
    env:
      <<: *env
  - name: api-bg
    args: "${var.dev ? [ 'npm', 'run', 'dev:background' ] : ['npm', 'run', 'start:background']}"
    devMode:
      <<: *devMode
    dependencies:
      - api-pubsub-init
      - api
    env:
      <<: *env
